image: golang:latest

stages:
  - build

compile:
  stage: build
  variables:
    CGO_ENABLED: "0"
  script:
    - mkdir -p binaries
    - go build -o binaries ./cmd/main.go
  artifacts:
    paths:
      - binaries

build_geo:
  stage: build
  parallel:
    matrix:
      - NAME: post-cis
        MAPS: "europe/ukraine,russia,europe/belarus,europe/finland,europe/georgia,asia/afghanistan,asia/armenia,asia/azerbaijan,asia/kazakhstan,asia/uzbekistan,asia/mongolia"
  variables:
    NAME: $NAME
    MAPS: "$MAPS"
    CGO_ENABLED: "0"

  cache:
    paths:
      - maps

  script:
    - echo $NAME
    - |
      echo "Downloading: ${MAPS}"
      mkdir maps
      pushd maps
        export IFS=","
        for map in $MAPS; do
          file=${map}-latest.osm.pbf

          if test -e "$file"
            then zflag="-z '$file'"
            else zflag=
          fi

          curl "https://download.geofabrik.de/${file}" --create-dirs -o $file $zflag
        done
      popd
    - |
      MAPS_FILES=""
      export IFS=","
      for map in $MAPS; do
        MAPS_FILES="${MAPS_FILES},maps/${map}-latest.osm.pbf"
      done
      MAPS_FILES="${MAPS_FILES:1}" 
      go run ./cmd/main.go generate -p ${NAME}_points -i $MAPS_FILES

  artifacts:
    paths:
      - ${NAME}_points.*
